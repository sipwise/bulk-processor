{
  "comments": [
    {
      "key": {
        "uuid": "5000a189_a9a2912e",
        "filename": "lib/NGCP/BulkProcessor/Array.pm",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2019-10-31T14:42:15Z",
      "side": 1,
      "message": "well, downside is you now iterate 2 times. can be remarkable with large lists.\n\nbut more relevant afaics it will also convert to lowercase (instead of removing duplicates in acase-insensitive way).",
      "revId": "47ea077867134d375356ba444d52cec4d4a23dd0",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7796b782_91fa3aaa",
        "filename": "lib/NGCP/BulkProcessor/Array.pm",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2019-10-31T15:28:36Z",
      "side": 1,
      "message": "We iterate over the list twice, which is better than iterating over the list N² times. This is an O(2N) vs O(N²) algorithm.\n\nSo this implementation is an order of magnitude faster (even faster than an ad-hoc one based on a hash, I guess mainly because uniq is XS code):\n\n  https://paste.mgm.sipwise.com/show/6114/\n\nRegarding the lowercasing, I covered that in the commit message. If the caller cares about the result preserving case then there\u0027s something wrong in here, as the removal of the duplicates will make the output swap case depending on the order operated, which makes this a non-stable interface.",
      "parentUuid": "5000a189_a9a2912e",
      "revId": "47ea077867134d375356ba444d52cec4d4a23dd0",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3531a760_bd848a2b",
        "filename": "lib/NGCP/BulkProcessor/Array.pm",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2019-10-31T15:55:12Z",
      "side": 1,
      "message": "ah nice, so uniqe() seems to use something better than linear search; ok\n\nthx for sharing such benchmark, which also includes the hashlookup!\n\n\u003eRegarding the lowercasing, \nfine for me, pls just make sure to check the exisitng places in [bulk-processor] or [bulk-processor-projects] to adjusted if needed (if one of these method is actually used somewhere)",
      "parentUuid": "7796b782_91fa3aaa",
      "revId": "47ea077867134d375356ba444d52cec4d4a23dd0",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": true
    }
  ]
}